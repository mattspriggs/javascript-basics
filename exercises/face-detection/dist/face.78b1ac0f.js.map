{"mappings":"AAAA,0EAA0E;AAC1E,8EAA8E;AAC9E,0DAA0D;AAE1D,MAAM,QAAQ,SAAS,aAAa,CAAC;AAErC,MAAM,SAAS,SAAS,aAAa,CAAC;AACtC,MAAM,MAAM,OAAO,UAAU,CAAC;AAC9B,IAAI,WAAW,GAAG;AAClB,IAAI,SAAS,GAAG;AAChB,MAAM,aAAa,SAAS,aAAa,CAAC;AAC1C,MAAM,UAAU,OAAO,UAAU,CAAC;AAElC,MAAM,eAAe,IAAI,OAAO,YAAY,CAAC;IAAE,UAAU,IAAI;AAAC;AAE9D,qDAAqD;AACrD,eAAe,gBAAgB;IAC7B,MAAM,SAAS,MAAM,UAAU,YAAY,CAAC,YAAY,CAAC;QACvD,OAAO;YAAE,OAAO;YAAM,QAAQ;QAAI;IACpC;IACA,MAAM,SAAS,GAAG;IAClB,MAAM,MAAM,IAAI;IAChB,oDAAoD;IACpD,QAAQ,GAAG,CAAC,MAAM,UAAU,EAAE,MAAM,WAAW;IAC/C,OAAO,KAAK,GAAG,MAAM,UAAU;IAC/B,OAAO,MAAM,GAAG,MAAM,WAAW;IACjC,WAAW,KAAK,GAAG,MAAM,UAAU;IACnC,WAAW,MAAM,GAAG,MAAM,WAAW;AACvC;AAEA,eAAe,SAAS;IACtB,MAAM,QAAQ,MAAM,aAAa,MAAM,CAAC;IACxC,QAAQ,GAAG,CAAC,MAAM,MAAM;IACxB,mFAAmF;IACnF,MAAM,OAAO,CAAC;IACd,sBAAsB,SAAS,4CAA4C;AAC7E;AAEA,SAAS,SAAS,IAAI,EAAE;IACtB,MAAM,EAAE,MAAK,EAAE,OAAM,EAAE,IAAG,EAAE,KAAI,EAAE,GAAG,KAAK,WAAW;IACrD,IAAI,UAAU,CAAC,MAAM,KAAK,OAAO;AACnC;AACA,gBAAgB,IAAI,CAAC","sources":["pixelated-face.js"],"sourcesContent":["// The face detection does not work on all browsers and operating systems.\n// If you are getting a `Face detection service unavailable` error or similar,\n// it's possible that it won't work for you at the moment.\n\nconst video = document.querySelector('.webcam');\n\nconst canvas = document.querySelector('.video');\nconst ctx = canvas.getContext('2d');\nctx.strokeStyle = '#ffc600';\nctx.lineWidth = 2;\nconst faceCanvas = document.querySelector('.face');\nconst faceCtx = canvas.getContext('2d');\n\nconst faceDetector = new window.FaceDetector({ fastMode: true });\n\n//Write a function that will populate the users video\nasync function populateVideo() {\n  const stream = await navigator.mediaDevices.getUserMedia({\n    video: { width: 1280, height: 720 },\n  });\n  video.srcObject = stream;\n  await video.play();\n  //size the canvases to be the same size as the video\n  console.log(video.videoWidth, video.videoHeight);\n  canvas.width = video.videoWidth;\n  canvas.height = video.videoHeight;\n  faceCanvas.width = video.videoWidth;\n  faceCanvas.height = video.videoHeight;\n}\n\nasync function detect() {\n  const faces = await faceDetector.detect(video);\n  console.log(faces.length);\n  //ask the browser when the next animation frame is and tell it to run detect for us\n  faces.forEach(drawFace);\n  requestAnimationFrame(detect); //recursion function - function calls itself\n}\n\nfunction drawFace(face) {\n  const { width, height, top, left } = face.boundingBox;\n  ctx.strokeRect(left, top, width, height);\n}\npopulateVideo().then(detect);\n"],"names":[],"version":3,"file":"face.78b1ac0f.js.map","sourceRoot":"/__parcel_source_root/"}